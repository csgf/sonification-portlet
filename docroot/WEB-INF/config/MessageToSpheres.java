import java.io.*;import java.util.Random;import java.lang.Math;public class MessageToSpheres {                public static void main(String[] args) {                 new MessageToSpheres(args[0]);    }            public MessageToSpheres(String name) {   String aLine = "";   String bLine = "";   double value=0;   double value0=0;   double max=value;   double min=value;   double slope=0;   int intvalue=(int)value;   int n_of_notes=0;   double nextvalue=value;   String tot_message="";         /////////////////////////////////////////////////////////////////////////   /////////////////////////////////////////////////////////////////////////   //Reading from file   String filename="message.txt";   if (name!=""){     filename=name;   }   try{ //calculate scale factor and normalization       int cnt=0;       FileInputStream fin =  new FileInputStream(filename);       BufferedReader myInput = new BufferedReader (new InputStreamReader(fin));            while ((aLine = myInput.readLine()) != null){          tot_message=tot_message+removeSpaces(aLine);              }             }catch( Exception e ) {         e.printStackTrace();    }//end catch   /////////////////////////////////////////////////////////////////////////   /////////////////////////////////////////////////////////////////////////   int max_number_of_notes=tot_message.length();               n_of_notes=tot_message.length();    int[] pitches = new int[n_of_notes];   int[] values = new int[n_of_notes];    //convert the message lowecase   //tot_message=tot_message.toLowerCase();   try{           int cnt=0;          System.out.println("String length = "+ tot_message.length());          while (cnt<tot_message.length()) {             char letter=tot_message.charAt(cnt);             System.out.println("Char:"+letter);             value=(int)letter;             value=(int)value*2;             values[cnt]=(int)letter;             cnt=cnt+1;          }   } catch( Exception e ) {             e.printStackTrace();   }//end catch     ////////////////////////////////////////////////////////////////         // POVRay file generation     try{     System.out.println("POVRay file generation");     System.out.println(tot_message);      double x=0;      double y=0;      double z=0;      float r=0;      float red=0;      float green=0;      float blue=0;      float reflection=0;      int colnum=0;      String color;      int type=0;      float ior=0;      float filter=0;      float refraction=0;      String line="";      max=155;      		File outfile = new File("spheres.dat");		RandomAccessFile povraydata;        povraydata = new RandomAccessFile(outfile,"rw");      for (int a=0; a<n_of_notes; a++){//          System.out.print(values[a] + "\t");          x = Math.random() * values[a]/1.5-20;           y = Math.random() * values[a]/1.5-20 ;           z =  Math.random() * values[a]/1.5-30 ;           r=(float) Math.random() *values[a]/10;          red = (float) (values[a]*2/max) ;           green = (float) (values[a]*2/max) ;           blue = (float) (values[a]*2/max) ;           reflection = (float) (Math.random() * 0.5 * values[a]/max) ;           if  (values[a]%4<3){          colnum=(int)(Math.random() * 5)+1;          switch (colnum){          case 1: color="Yellow"; break;          case 2: color="Red"; break;          case 3: color="Green"; break;          case 4: color="Blue"; break;          default : color="colour red " +red+" green "+green+" blue "+blue;                    }          filter= (float)(Math.random()*0.2);//          filter = (float) (values[a]*2/max) ;           ior= (float)(Math.random()*.1);                   line+= "sphere {<"+String.valueOf((int)x)+","+String.valueOf((int)y)+","+String.valueOf((int)z)+">,"+String.valueOf(r);          if (Math.random()>0.6){            line+= " pigment {"+String.valueOf(color)+" filter "+String.valueOf(filter)+"}";          } else {            line+= " pigment {"+String.valueOf(color)+"}";          }            line +=" finish {reflection {"+String.valueOf(reflection)+"} ior "+String.valueOf(ior)+"}} \n";                    } else          {          line+="sphere {<"+String.valueOf((int)x)+","+String.valueOf((int)y)+","+String.valueOf((int)z)+">,"+String.valueOf((int)r)+ " texture {Texture_1}} \n";          }                      }      System.out.print(line);      povraydata.write(ConvertStringToByte(line));	      povraydata.close();      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    FileInputStream MioInFilStr = null;    FileOutputStream MioOutFilStr = null;    int LungFile = 0;    try {      MioInFilStr = new FileInputStream("template1.pov");    }    catch (IOException e) {      System.out.println("Error: " + e + " ");      System.exit(0);    }    try {      MioOutFilStr = new FileOutputStream("MessageToSpheres1.pov");    }    catch (IOException e) {      System.out.println("Error: " + e + " during file creation");      System.exit(0);    }    try {      LungFile = MioInFilStr.available();   // Mi informo sul num. bytes.    }    catch (IOException e) {      System.out.println("Errore: " + e + " determinando la lungh. di un file");      System.exit(0);    }    try {      for(int i=0; i<LungFile; i++) {        MioOutFilStr.write(MioInFilStr.read());   // copio un byte.      }    }    catch (IOException e) {      System.out.println("Error: " + e + " during file editing");      System.exit(0);    }    try {      MioInFilStr.close();         // Chiudo l'InputStream.      MioOutFilStr.close();        // Chiudo l'OutputStream.    }    catch (IOException e) {      System.out.println("Error: " + e + " during file closing");      System.exit(0);    }     System.out.println("File created, " + LungFile + " bytes \n");//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////   MioInFilStr = null;   MioOutFilStr = null;   LungFile = 0;    try {      MioInFilStr = new FileInputStream("template2.pov");    }    catch (IOException e) {      System.out.println("Error: " + e + " ");      System.exit(0);    }    try {      MioOutFilStr = new FileOutputStream("MessageToSpheres2.pov");    }    catch (IOException e) {      System.out.println("Error: " + e + " during file creation");      System.exit(0);    }    try {      LungFile = MioInFilStr.available();   // Mi informo sul num. bytes.    }    catch (IOException e) {      System.out.println("Errore: " + e + " determinando la lungh. di un file");      System.exit(0);    }    try {      for(int i=0; i<LungFile; i++) {        MioOutFilStr.write(MioInFilStr.read());   // copio un byte.      }    }    catch (IOException e) {      System.out.println("Error: " + e + " during file editing");      System.exit(0);    }    try {      MioInFilStr.close();         // Chiudo l'InputStream.      MioOutFilStr.close();        // Chiudo l'OutputStream.    }    catch (IOException e) {      System.out.println("Error: " + e + " during file closing");      System.exit(0);    }     System.out.println("File created, " + LungFile + " bytes \n");//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////   MioInFilStr = null;   MioOutFilStr = null;   LungFile = 0;    try {      MioInFilStr = new FileInputStream("template3.pov");    }    catch (IOException e) {      System.out.println("Error: " + e + " ");      System.exit(0);    }    try {      MioOutFilStr = new FileOutputStream("MessageToSpheres3.pov");    }    catch (IOException e) {      System.out.println("Error: " + e + " during file creation");      System.exit(0);    }    try {      LungFile = MioInFilStr.available();   // Mi informo sul num. bytes.    }    catch (IOException e) {      System.out.println("Errore: " + e + " determinando la lungh. di un file");      System.exit(0);    }    try {      for(int i=0; i<LungFile; i++) {        MioOutFilStr.write(MioInFilStr.read());   // copio un byte.      }    }    catch (IOException e) {      System.out.println("Error: " + e + " during file editing");      System.exit(0);    }    try {      MioInFilStr.close();         // Chiudo l'InputStream.      MioOutFilStr.close();        // Chiudo l'OutputStream.    }    catch (IOException e) {      System.out.println("Error: " + e + " during file closing");      System.exit(0);    }     System.out.println("File created, " + LungFile + " bytes \n");//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////   MioInFilStr = null;   MioOutFilStr = null;   LungFile = 0;    try {      MioInFilStr = new FileInputStream("template4.pov");    }    catch (IOException e) {      System.out.println("Error: " + e + " ");      System.exit(0);    }    try {      MioOutFilStr = new FileOutputStream("MessageToSpheres4.pov");    }    catch (IOException e) {      System.out.println("Error: " + e + " during file creation");      System.exit(0);    }    try {      LungFile = MioInFilStr.available();   // Mi informo sul num. bytes.    }    catch (IOException e) {      System.out.println("Errore: " + e + " determinando la lungh. di un file");      System.exit(0);    }    try {      for(int i=0; i<LungFile; i++) {        MioOutFilStr.write(MioInFilStr.read());   // copio un byte.      }    }    catch (IOException e) {      System.out.println("Error: " + e + " during file editing");      System.exit(0);    }    try {      MioInFilStr.close();         // Chiudo l'InputStream.      MioOutFilStr.close();        // Chiudo l'OutputStream.    }    catch (IOException e) {      System.out.println("Error: " + e + " during file closing");      System.exit(0);    }     System.out.println("File created, " + LungFile + " bytes \n");//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////   MioInFilStr = null;   MioOutFilStr = null;   LungFile = 0;    try {      MioInFilStr = new FileInputStream("template5.pov");    }    catch (IOException e) {      System.out.println("Error: " + e + " ");      System.exit(0);    }    try {      MioOutFilStr = new FileOutputStream("MessageToSpheres5.pov");    }    catch (IOException e) {      System.out.println("Error: " + e + " during file creation");      System.exit(0);    }    try {      LungFile = MioInFilStr.available();   // Mi informo sul num. bytes.    }    catch (IOException e) {      System.out.println("Errore: " + e + " determinando la lungh. di un file");      System.exit(0);    }    try {      for(int i=0; i<LungFile; i++) {        MioOutFilStr.write(MioInFilStr.read());   // copio un byte.      }    }    catch (IOException e) {      System.out.println("Error: " + e + " during file editing");      System.exit(0);    }    try {      MioInFilStr.close();         // Chiudo l'InputStream.      MioOutFilStr.close();        // Chiudo l'OutputStream.    }    catch (IOException e) {      System.out.println("Error: " + e + " during file closing");      System.exit(0);    }     System.out.println("File created, " + LungFile + " bytes \n");/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////      //APPEND  try {     PrintStream out =         new PrintStream(new AppendFileStream("MessageToSpheres1.pov"));    out.print(line);    out.close();    }   catch(Exception e) {    System.out.println(e.toString());    }  try {     PrintStream out =         new PrintStream(new AppendFileStream("MessageToSpheres2.pov"));    out.print(line);    out.close();    }   catch(Exception e) {    System.out.println(e.toString());    }  try {     PrintStream out =         new PrintStream(new AppendFileStream("MessageToSpheres3.pov"));    out.print(line);    out.close();    }   catch(Exception e) {    System.out.println(e.toString());    }  try {     PrintStream out =         new PrintStream(new AppendFileStream("MessageToSpheres4.pov"));    out.print(line);    out.close();    }   catch(Exception e) {    System.out.println(e.toString());    }  try {     PrintStream out =         new PrintStream(new AppendFileStream("MessageToSpheres5.pov"));    out.print(line);    out.close();    }   catch(Exception e) {    System.out.println(e.toString());    }      //END APPEND          } catch (IOException e) {            System.out.println("IOException:");            e.printStackTrace();    }// END OF POVRAY FILE GENERATION       }           static String removeSpaces(String withSpaces) {        java.util.StringTokenizer t = new java.util.StringTokenizer(withSpaces, " ");        StringBuffer result = new StringBuffer("");        while (t.hasMoreTokens()) {            result.append(t.nextToken());        }        return result.toString();    }           int dodecafonic(double value, double max, double min){       int midiPitch;       midiPitch=(int)((value-(max+min)/2)*(65-0)/(max-min))+65;       return midiPitch;    }            	private byte[] ConvertStringToByte(String str)	{		int i;		byte[] byteStr = new byte[str.length()];				str.getBytes(0,str.length(),byteStr,0);				return byteStr;		}	} //end of global class  class AppendFileStream extends OutputStream {   RandomAccessFile fd;   public AppendFileStream(String file) throws IOException {     fd = new RandomAccessFile(file,"rw");     fd.seek(fd.length());     }   public void close() throws IOException {     fd.close();     }   public void write(byte[] b) throws IOException {     fd.write(b);     }   public void write(byte[] b,int off,int len) throws IOException {     fd.write(b,off,len);     }   public void write(int b) throws IOException {     fd.write(b);     }   }